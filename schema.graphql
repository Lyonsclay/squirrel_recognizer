type Squirrel {
  id: ID!
  name: String
  pose: String
  photoUrl: String
}

type NotSquirrel {
  id: ID!
  name: String
  pose: String
  photoUrl: String
}

type Color {
  id: ID!
  name: String
  red: Int!
  green: Int!
  blue: Int!
}

type Row {
  id: ID!
  name: String
  col0: Color!
  col1: Color!
}

type Column {
  id: ID!
  name: String
  row0: Color!
  row1: Color!
}

type RowSquare {
  id: ID!
  name: String
  row0: Row!
  row1: Row!
}

type ColumnSquare {
  id: ID!
  name: String
  col0: Row!
  col1: Row!
}

union Square = ColumnSquare | RowSquare

type Position {
  x: Int!
  y: Int!
}

type RowGrid {
  id: ID!
  position: Position
  row0: [Square!]
  row1: [Square!]
}

type ColumnGrid {
  id: ID!
  position: Position
  col0: [Square!]
  col1: [Square!]
}

union Grid = RowGrid | ColumnGrid

type Dimensions {
  x: Int!
  y: Int!
}

type Mat {
  id: ID!
  name: String
  dimensions: Dimensions
  grids: [Grid]
}

type Query {
  allColors: [Color]
  color(id: ID, name: String): Color
  allRows: [Row]
  row(id: ID, name: String): Row
}

type Mutation {
  addColor(red: String!, green: String!, blue: String!): Color
  addRow(color0ID: ID!, color1ID: ID!): Row
}
